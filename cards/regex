star
Match preceding character 0 or more times (greedy)
*

starlazy
Match preceding character 0 or more times (lazy)
*?

plus
Match preceding character 1 or more times (greedy)
+

pluslazy
Match preceding character 1 or more times (lazy)
+?

dot
Match any single character
.

either
Match either 'x' or 'y'
x|y

escape
Escape a special character
\

char
The character b
b

string
The string abc
abc

digit
Match a digit character
\d

nondigit
Match a non-digit character
\D

space
Match a single white space character (space, tab, form feed, or line feed)
\s

nonspace
Match a single character other than white space
\S

alphanum
Match any alphanumeric character (including underscore)
\w

non_word
Match any non-word character
\W

set
Match any one of the characters in the set 'abc'
[abc]

notset
Match anything not in character set 'abc'
[^abc]

backspace
Match a backspace
[\b]

beginning
Match beginning of input
^

end
Match end of input
$

word_boundary
Match a word boundary
\b

non_word_boundary
Match a non-word boundary
\B

lookahead
Lookahead
?=

negative_lookahead
Negative lookahead
?!

lookbehind
Lookbehind
?<=

negative_lookbehind
Negative lookbehind
?<!

once_only
Once-only subexpression
?>

if
If then condition
?()

if_else
If then else condition
?()|

comment
Comment
?#

exactly_n
Match exactly n occurrences of preceding character
{n}

n_to_m
Match at least n and at most m occurrences of the preceding character (greedy)
{n,m}

n_to_mlazy
Match at least n and at most m occurrences of the preceding character (lazy)
{n,m}?

0_or_1
Match 0 or 1 (greedy)
?

0_or_1lazy
Match 0 or 1 (lazy)
??

line_feed
Match a line feed
\n

tab
Match a tab
\t

null
Match a NULL
\0

global
Global search
g

case_insensitive
Case-insensitive search
i

multi_line
Multi-line search
m

sticky
"sticky" search match starting at current position in target string
y

capture
Match 'x' and remember the match
(x)

non_capture
Match 'x' but do not remember the match
(?:x)

backref
A back reference to the last substring matching the n parenthetical in the regex
\n
